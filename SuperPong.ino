//Jonathan Holmes (crait)
//December 7th, 2016
//A simple Pong clone

#include <Arduboy2.h>
#include <ArduboyPlaytune.h>
Arduboy2 arduboy;
ArduboyPlaytune tunes(arduboy.audio.enabled);
//Variables declared here
// Playtune bytestream for file "E:\Arduino Stuff\Resources\4097211-Take_on_Me_-_a-ha.mid" created by MIDI2TONES V1.0.0 on Sun Apr 01 16:44:03 2018
// command line: midi2tones_64bit.exe E:\Arduino Stuff\Resources\4097211-Take_on_Me_-_a-ha 
// Playtune bytestream for file "E:\Arduino Stuff\Resources\3024-Chopin_-_Funeral_March.mid" created by MIDI2TONES V1.0.0 on Sun Apr 01 17:32:32 2018
// command line: midi2tones_64bit.exe E:\Arduino Stuff\Resources\3024-Chopin_-_Funeral_March 
// Playtune bytestream for file "E:\Arduino Stuff\Resources\Rodland_title.mid" created by MIDI2TONES V1.0.0 on Sun Apr 01 17:59:55 2018
// command line: midi2tones_64bit.exe E:\Arduino Stuff\Resources\Rodland_title 
// Playtune bytestream for file "E:\Arduino Stuff\Resources\wbml_gameover.mid" created by MIDI2TONES V1.0.0 on Sun Apr 01 18:02:06 2018
// command line: midi2tones_64bit.exe E:\Arduino Stuff\Resources\wbml_gameover 
// Playtune bytestream for file "E:\Arduino Stuff\Resources\128076-TV_Theme_from_Family_Guy.mid" created by MIDI2TONES V1.0.0 on Sun Apr 01 18:15:08 2018
// command line: midi2tones_64bit.exe E:\Arduino Stuff\Resources\128076-TV_Theme_from_Family_Guy 
// Playtune bytestream for file "E:\Arduino Stuff\Resources\2462606-Stranger_Things_theme.mid" created by MIDI2TONES V1.0.0 on Sun Apr 01 18:18:26 2018
// command line: midi2tones_64bit.exe E:\Arduino Stuff\Resources\2462606-Stranger_Things_theme 
// Playtune bytestream for file "E:\Arduino Stuff\Resources\3979026-Puzzle_Bobble_Theme.mid" created by MIDI2TONES V1.0.0 on Sun Apr 01 18:12:41 2018
// command line: midi2tones_64bit.exe E:\Arduino Stuff\Resources\3979026-Puzzle_Bobble_Theme 
// Playtune bytestream for file "E:\Arduino Stuff\Resources\Rodland_title.mid" created by MIDI2TONES V1.0.0 on Sun Apr 01 17:59:55 2018
// command line: midi2tones_64bit.exe E:\Arduino Stuff\Resources\Rodland_title 
// Playtune bytestream for file "E:\Arduino Stuff\Resources\ghostgoblin.mid" created by MIDI2TONES V1.0.0 on Sun Apr 01 18:33:31 2018
// command line: midi2tones_64bit.exe E:\Arduino Stuff\Resources\ghostgoblin 
// Playtune bytestream for file "E:\Arduino Stuff\Resources\beast-death-dv-v1_0.mid" created by MIDI2TONES V1.0.0 on Sun Apr 01 18:40:28 2018
// command line: midi2tones_64bit.exe E:\Arduino Stuff\Resources\beast-death-dv-v1_0 
// Playtune bytestream for file "E:\Arduino Stuff\Resources\RickDangerous.mid" created by MIDI2TONES V1.0.0 on Sun Apr 01 18:50:26 2018
// command line: midi2tones_64bit.exe E:\Arduino Stuff\Resources\RickDangerous 
const byte good[] PROGMEM = {
 2,43, 0x90,54, 0x91,49, 0,111, 0x92,42, 0x90,54, 0x91,49, 1,77, 0x92,42, 0x90,61, 0x91,66, 1,77, 0x92,42,
 0x90,61, 0x91,58, 1,77, 0x92,42, 0,222, 0x90,58, 0x91,49, 0,111, 0x92,47, 0x90,54, 0x91,59, 1,77, 0x92,47,
 0x90,61, 0x91,54, 1,77, 0x92,47, 0x90,63, 0x91,54, 1,77, 0x92,47, 0,222, 0x90,61, 0x91,56, 0,111, 0x92,49,
 0x90,56, 0x91,61, 1,77, 0x92,49, 0x90,65, 0x91,68, 1,77, 0x92,49, 0x90,65, 0x91,61, 1,77, 0x92,49, 0,222,
 0x90,61, 0x91,56, 0,111, 0x92,49, 0x90,56, 0x91,63, 1,77, 0x92,49, 0x90,61, 0x91,65, 1,77, 0x92,42, 0x90,61,
 0x91,66, 1,77, 0x92,42, 0,222, 0x90,49, 0x91,54, 0,111, 0x92,42, 0x90,49, 0x91,54, 1,77, 0x92,42, 0x90,61,
 0x91,66, 1,77, 0x92,42, 0x90,61, 0x91,58, 1,77, 0x92,42, 0,222, 0x90,58, 0x91,49, 0,111, 0x92,47, 0x90,54,
 0x91,59, 1,77, 0x92,47, 0x90,61, 0x91,54, 1,77, 0x92,47, 0x90,63, 0x91,54, 1,77, 0x92,47, 1,77, 0x90,54,
 0x92,62, 0x91,69, 1,77, 0x80, 0x81, 1,77, 0x90,71, 0x92,64, 0x91,56, 1,77, 0x80, 0x81, 1,77, 0x90,58, 0x92,54,
 0x91,49, 1,77, 0x92,54, 0x90,46, 0x91,61, 1,77, 0x92,49, 0x90,54, 0x91,46, 2,154, 0x92,35, 0x90,59, 0x91,63,
 1,77, 0x92,35, 0x90,63, 0x91,66, 1,77, 0x92,35, 0x90,66, 0x91,71, 2,154, 0x92,37, 0x90,68, 0x91,65, 1,77,
 0x92,37, 1,77, 0x90,65, 0x92,37, 0x91,61, 1,77, 0x92,37, 0x90,61, 0x91,56, 1,77, 0x92,35, 0x90,59, 0x91,63,
 1,77, 0x92,35, 0x90,63, 0x91,66, 1,77, 0x92,35, 0x90,71, 0x91,66, 1,77, 0x92,35, 1,77, 0x90,73, 0x92,37,
 0x91,68, 1,77, 0x92,37, 1,77, 0x90,65, 0x92,37, 0x91,61, 1,77, 0x92,37, 0x90,61, 0x91,56, 1,77, 0x92,35,
 0x90,59, 0x91,63, 1,77, 0x92,35, 0x90,63, 0x91,66, 1,77, 0x92,35, 0x90,66, 0x91,71, 1,77, 0x92,35, 1,77,
 0x90,65, 0x92,37, 0x91,68, 1,77, 0x92,37, 1,77, 0x90,65, 0x92,37, 0x91,61, 1,77, 0x92,37, 0x90,61, 0x91,56,
 1,77, 0x92,35, 0x90,59, 0x91,63, 1,77, 0x92,35, 0x90,63, 0x91,66, 1,77, 0x92,35, 0x90,71, 0x91,66, 1,77,
 0x92,35, 1,77, 0x90,68, 0x92,37, 0x91,73, 1,77, 0x92,37, 1,77, 0x90,65, 0x92,37, 0x91,61, 1,77, 0x92,37,
 0x90,61, 0x91,56, 0,222, 0x90,54, 0x91,49, 0,111, 0x92,42, 0x90,54, 0x91,49, 1,77, 0x92,42, 0x90,61, 0x91,66,
 1,77, 0x92,42, 0x90,61, 0x91,58, 1,77, 0x92,42, 0,222, 0x90,58, 0x91,49, 0,111, 0x92,47, 0x90,54, 0x91,59,
 1,77, 0x92,47, 0x90,61, 0x91,54, 1,77, 0x92,47, 0x90,63, 0x91,54, 1,77, 0x92,47, 0,222, 0x90,61, 0x91,56,
 0,111, 0x92,49, 0x90,56, 0x91,61, 1,77, 0x92,49, 0x90,65, 0x91,68, 1,77, 0x92,49, 0x90,65, 0x91,61, 1,77,
 0x92,49, 0,222, 0x90,61, 0x91,56, 0,111, 0x92,49, 0x90,56, 0x91,63, 1,77, 0x92,49, 0x90,61, 0x91,65, 1,77,
 0x92,42, 0x90,61, 0x91,66, 1,77, 0x92,42, 0,222, 0x90,49, 0x91,54, 0,111, 0x92,42, 0x90,49, 0x91,54, 1,77,
 0x92,42, 0x90,61, 0x91,66, 1,77, 0x92,42, 0x90,61, 0x91,58, 1,77, 0x92,42, 0,222, 0x90,58, 0x91,49, 0,111,
 0x92,47, 0x90,54, 0x91,59, 1,77, 0x92,47, 0x90,61, 0x91,54, 1,77, 0x92,47, 0x90,63, 0x91,54, 1,77, 0x92,47,
 1,77, 0x90,54, 0x92,57, 0x91,62, 1,77, 0x80, 0x81, 1,77, 0x90,56, 0x92,59, 0x91,64, 1,77, 0x80, 0x81, 1,77,
 0x90,54, 0x92,58, 0x91,49, 1,77, 0x92,61, 0x90,54, 0x91,46, 1,77, 0x92,46, 0x90,54, 0x91,49, 2,154, 0x92,40,
 0x90,68, 0x91,64, 1,77, 0x92,40, 0x90,68, 0x91,71, 1,77, 0x92,40, 0x90,71, 0x91,76, 2,154, 0x92,42, 0x90,73,
 0x91,70, 1,77, 0x92,42, 1,77, 0x90,70, 0x92,42, 0x91,66, 1,77, 0x92,42, 0x90,66, 0x91,61, 1,77, 0x92,40,
 0x90,64, 0x91,68, 1,77, 0x92,40, 0x90,68, 0x91,71, 1,77, 0x92,40, 0x90,71, 0x91,76, 1,77, 0x92,40, 1,77,
 0x90,78, 0x92,42, 0x91,73, 1,77, 0x92,42, 1,77, 0x90,66, 0x92,42, 0x91,70, 1,77, 0x92,42, 0x90,66, 0x91,61,
 1,77, 0x92,40, 0x90,64, 0x91,68, 1,77, 0x92,40, 0x90,68, 0x91,71, 1,77, 0x92,40, 0x90,71, 0x91,76, 1,77,
 0x92,40, 1,77, 0x90,70, 0x92,42, 0x91,73, 1,77, 0x92,42, 1,77, 0x90,70, 0x92,42, 0x91,66, 1,77, 0x92,42,
 0x90,66, 0x91,61, 1,77, 0x92,40, 0x90,64, 0x91,68, 1,77, 0x92,40, 0x90,68, 0x91,71, 1,77, 0x92,40, 0x90,71,
 0x91,76, 1,77, 0x92,40, 1,77, 0x90,73, 0x92,42, 0x91,78, 1,77, 0x92,42, 1,77, 0x90,66, 0x92,42, 0x91,70,
 1,77, 0x92,42, 0x90,66, 0x91,61, 0,222, 0x90,59, 0x91,54, 0,111, 0x92,47, 0x90,54, 0x91,59, 1,77, 0x92,47,
 0x90,66, 0x91,71, 1,77, 0x92,47, 0x90,66, 0x91,63, 1,77, 0x92,47, 0,222, 0x90,63, 0x91,54, 0,111, 0x92,52,
 0x90,59, 0x91,64, 1,77, 0x92,52, 0x90,66, 0x91,59, 1,77, 0x92,52, 0x90,68, 0x91,59, 1,77, 0x92,52, 0,222,
 0x90,66, 0x91,61, 0,111, 0x92,54, 0x90,61, 0x91,66, 1,77, 0x92,54, 0x90,70, 0x91,73, 1,77, 0x92,54, 0x90,70,
 0x91,66, 1,77, 0x92,54, 0,222, 0x90,66, 0x91,61, 0,111, 0x92,54, 0x90,61, 0x91,68, 1,77, 0x92,54, 0x90,66,
 0x91,70, 1,77, 0x92,47, 0x90,66, 0x91,71, 1,77, 0x92,47, 0,222, 0x90,54, 0x91,59, 0,111, 0x92,47, 0x90,54,
 0x91,59, 1,77, 0x92,47, 0x90,66, 0x91,71, 1,77, 0x92,47, 0x90,66, 0x91,63, 1,77, 0x92,47, 0,222, 0x90,63,
 0x91,54, 0,111, 0x92,52, 0x90,59, 0x91,64, 1,77, 0x92,52, 0x90,66, 0x91,59, 1,77, 0x92,52, 0x90,68, 0x91,59,
 1,77, 0x92,52, 1,77, 0x90,59, 0x92,55, 0x91,67, 1,77, 0x80, 0x81, 1,77, 0x90,61, 0x92,57, 0x91,69, 1,77,
 0x80, 0x81, 1,77, 0x90,59, 0x92,47, 0x91,54, 1,77, 0x92,47, 0x90,59, 0x91,51, 1,77, 0x92,42, 0x90,59, 0x91,54,
 2,154, 0x80, 0x81, 0x82, 0xf0
};
const byte dead[] PROGMEM = {
 0x90,53, 2,119, 0x90,48, 2,119, 0x90,41, 2,119, 0x90,51, 7,102, 0x90,51, 2,119, 0x90,41, 2,119, 0x90,48,
 2,119, 0x90,53, 7,102, 0x80,
 0xf0
};
// This score contains 34 bytes, and 1 tone generator is used.
const byte game[] PROGMEM = {
 0x90,56, 0,138, 0x90,59, 0,138, 0x91,80, 0x92,75, 0x90,63, 0,138, 0x90,51, 0,133, 0x90,56, 0,138, 0x90,63,
 0,144, 0x90,79, 0x91,75, 0x92,63, 1,21, 0x90,78, 0x91,75, 0x92,56, 0,138, 0x92,59, 0,133, 0x92,63, 0,138,
 0x82, 0,5, 0x92,51, 0,138, 0x90,77, 0x91,75, 0x92,56, 0,133, 0x82, 0,5, 0x92,63, 0,138, 0x90,76, 0x91,70,
 0x92,63, 1,21, 0x90,74, 0x91,70, 0x92,58, 0,138, 0x90,75, 0x92,60, 0,138, 0x90,63, 0x81, 0x82, 0,138, 0x91,74,
 0x92,70, 0x90,51, 0,138, 0x90,75, 0x91,58, 0,138, 0x90,63, 0x81, 0x82, 0,138, 0x91,74, 0x92,70, 0x90,63, 0,138,
 0x91,75, 0,138, 0x90,58, 0x81, 0x82, 0,138, 0x91,61, 0x92,58, 0x90,60, 0,138, 0x90,63, 0x91,63, 0,138, 0x90,61,
 0x91,51, 0x82, 0,138, 0x90,58, 0x91,63, 0x92,58, 0,133, 0x92,63, 0,144, 0x90,67, 0x91,63, 0x92,63, 1,15, 0x92,56,
 0,5, 0x80, 0x81, 0,138, 0x90,59, 0x82, 0,138, 0x91,80, 0x92,75, 0x90,63, 0,138, 0x90,51, 0,138, 0x90,56, 0,133,
 0x90,63, 0,144, 0x90,79, 0x91,75, 0x92,63, 1,21, 0x90,78, 0x91,75, 0x92,56, 0,133, 0x92,59, 0,138, 0x82, 0,5,
 0x92,63, 0,133, 0x82, 0,5, 0x92,51, 0,138, 0x90,77, 0x91,75, 0x92,56, 0,138, 0x92,63, 0,138, 0x90,76, 0x91,70,
 0x92,63, 1,21, 0x90,74, 0x91,70, 0x92,58, 0,138, 0x90,75, 0x92,60, 0,138, 0x90,63, 0x81, 0x82, 0,138, 0x91,74,
 0x92,70, 0x90,51, 0,138, 0x90,75, 0x91,58, 0,138, 0x90,63, 0x81, 0x82, 0,138, 0x91,74, 0x92,70, 0x90,63, 0,138,
 0x91,75, 0,133, 0x80, 0,5, 0x90,58, 0x81, 0x82, 0,138, 0x91,61, 0x92,58, 0x90,60, 0,138, 0x90,63, 0x91,63, 0,138,
 0x90,61, 0x91,51, 0x82, 0,138, 0x90,58, 0x91,63, 0x92,58, 0,133, 0x92,63, 0,144, 0x90,70, 0x91,63, 0x92,63, 1,21,
 0x90,79, 0x91,59, 0x92,56, 0,69, 0x91,59, 0,69, 0x90,59, 0x91,80, 0x92,59, 0,69, 0x92,59, 0,69, 0x90,63,
 0x91,59, 0x82, 0,69, 0x91,59, 0,69, 0x90,79, 0x91,51, 0x92,59, 0,69, 0x92,59, 0,69, 0x90,56, 0x91,80, 0x92,59,
 0,69, 0x92,59, 0,69, 0x90,59, 0x91,59, 0x82, 0,69, 0x91,59, 0,69, 0x90,71, 0x91,63, 0x92,59, 0,69, 0x92,59,
 0,69, 0x91,51, 0x92,59, 0,69, 0x92,59, 0,69, 0x90,56, 0x91,79, 0x92,59, 0,69, 0x92,59, 0,69, 0x90,60,
 0x91,80, 0x92,59, 0,69, 0x92,59, 0,69, 0x90,64, 0x91,59, 0x82, 0,69, 0x91,59, 0,69, 0x90,79, 0x91,48, 0x92,59,
 0,69, 0x92,59, 0,69, 0x90,56, 0x91,80, 0x92,59, 0,69, 0x92,59, 0,69, 0x90,60, 0x91,59, 0x82, 0,69, 0x91,59,
 0,69, 0x90,71, 0x91,64, 0x92,59, 0,69, 0x92,59, 0,69, 0x91,48, 0x92,59, 0,69, 0x92,59, 0,69, 0x90,56,
 0x91,79, 0x92,60, 0,69, 0x92,60, 0,69, 0x90,64, 0x91,80, 0x92,60, 0,69, 0x92,60, 0,69, 0x90,68, 0x91,60,
 0x82, 0,69, 0x91,60, 0,69, 0x90,79, 0x91,48, 0x92,60, 0,69, 0x92,60, 0,69, 0x90,56, 0x91,80, 0x92,60, 0,69,
 0x92,60, 0,69, 0x90,64, 0x91,60, 0x82, 0,69, 0x91,60, 0,69, 0x90,72, 0x91,68, 0x92,60, 0,69, 0x92,60, 0,69,
 0x91,48, 0x92,60, 0,69, 0x92,60, 0,69, 0x90,56, 0x91,79, 0x92,61, 0,69, 0x92,61, 0,69, 0x90,64, 0x91,80,
 0x92,61, 0,69, 0x92,61, 0,69, 0x90,68, 0x91,61, 0x82, 0,69, 0x91,61, 0,69, 0x90,79, 0x91,49, 0x92,61, 0,69,
 0x92,61, 0,69, 0x90,56, 0x91,80, 0x92,61, 0,69, 0x92,61, 0,69, 0x90,64, 0x91,61, 0x82, 0,69, 0x91,61, 0,69,
 0x90,74, 0x91,68, 0x92,61, 0,69, 0x92,61, 0,69, 0x91,49, 0x92,61, 0,69, 0x92,61, 0,69, 0x90,63, 0x91,75,
 0x92,67, 0,138, 0x90,63, 0x91,75, 0x92,67, 0,138, 0x90,63, 0x91,75, 0x92,67, 1,21, 0x90,55, 0x81, 0x82, 1,21,
 0x91,79, 0x92,63, 0x90,51, 1,21, 0x90,75, 0x91,67, 0x92,63, 0,138, 0x90,75, 0x91,67, 0x92,63, 0,138, 0x90,75,
 0x91,67, 0x92,63, 1,21, 0x90,56, 0x81, 0x82, 1,21, 0x91,80, 0x92,63, 0x90,51, 1,21, 0x90,75, 0x91,70, 0x92,63,
 0,138, 0x90,75, 0x91,70, 0x92,63, 0,138, 0x90,75, 0x91,70, 0x92,63, 1,15, 0x82, 0,5, 0x80, 0x81, 1,21, 0x90,63,
 0x91,74, 0x92,68, 0,133, 0x80, 0,5, 0x90,63, 0,138, 0x90,75, 0x91,67, 0x92,56, 0,138, 0x90,63, 0x91,60, 0x92,63,
 0,138, 0x90,64, 0x91,59, 0x92,64, 0,138, 0x90,65, 0x91,59, 0x92,65, 0,138, 0x90,66, 0x91,58, 0x92,66, 0,138,
 0x90,67, 0x91,57, 0x92,67, 0,138, 0x90,68, 0x91,56, 0x92,68, 0,138, 0x90,70, 0x91,55, 0x92,70, 0,138, 0x90,68,
 0x91,63, 0x92,56, 0,138, 0x82, 0,133, 0x92,63, 0,144, 0x92,63, 0,138, 0x82, 0,133, 0x92,56, 0,138, 0x82, 0,5,
 0x92,59, 0,138, 0x92,63, 0,138, 0x90,56, 0x81, 0x82, 0,133, 0x80, 0,144, 0x90,74, 0x91,68, 0x92,63, 0,138, 0x90,75,
 0x92,63, 0,133, 0x82, 0,5, 0x80, 0x81, 0,138, 0x90,56, 0x91,74, 0x92,68, 0,138, 0x90,62, 0x91,75, 0,133, 0x90,63,
 0,5, 0x81, 0x82, 0,138, 0x90,67, 0x91,63, 0x92,55, 0,133, 0x82, 0,144, 0x92,63, 0,138, 0x92,63, 0,133, 0x82,
 0,138, 0x92,55, 0,144, 0x92,63, 0,138, 0x92,63, 0,133, 0x92,55, 0,5, 0x80, 0x81, 0,138, 0x82, 0,138, 0x90,74,
 0x91,70, 0x92,63, 0,138, 0x90,75, 0x92,63, 0,138, 0x80, 0x81, 0x82, 0,138, 0x90,74, 0x91,70, 0x92,55, 0,138, 0x90,75,
 0x92,62, 0,138, 0x90,63, 0x81, 0x82, 0,138, 0x91,71, 0x92,64, 0x90,52, 0,133, 0x80, 0,144, 0x90,59, 0,138, 0x90,59,
 0,133, 0x80, 0,144, 0x90,52, 0,133, 0x80, 0,5, 0x90,56, 0,133, 0x90,59, 0,144, 0x90,52, 0x81, 0x82, 0,133,
 0x80, 0,144, 0x90,76, 0x91,71, 0x92,59, 0,138, 0x90,78, 0x92,59, 0,133, 0x82, 0,5, 0x80, 0x81, 0,138, 0x90,52,
 0x91,76, 0x92,71, 0,138, 0x90,56, 0x91,78, 0,133, 0x90,59, 0,5, 0x81, 0x82, 0,138, 0x90,75, 0x91,70, 0x92,55,
 0,138, 0x82, 0,133, 0x92,63, 0,144, 0x90,63, 0x91,58, 0x92,63, 0,133, 0x82, 0,138, 0x92,55, 0,144, 0x90,75,
 0x91,70, 0x92,60, 0,138, 0x92,63, 0,133, 0x82, 0,5, 0x80, 0x81, 0,138, 0x90,63, 0x91,72, 0x92,70, 0,138, 0x90,62,
 0x91,72, 0x92,70, 0,138, 0x90,60, 0x91,72, 0x92,70, 0,138, 0x90,59, 0x91,70, 0x92,67, 0,138, 0x90,59, 0x91,70,
 0x92,67, 0,138, 0x90,58, 0x91,67, 0x92,60, 0,138, 0x90,55, 0x91,67, 0x92,60, 0,138, 0x90,56, 0x81, 0x82, 0,138,
 0x90,59, 0,138, 0x91,80, 0x92,75, 0x90,63, 0,138, 0x90,51, 0,133, 0x90,56, 0,138, 0x90,63, 0,144, 0x90,79,
 0x91,75, 0x92,63, 1,21, 0x90,78, 0x91,75, 0x92,56, 0,138, 0x92,59, 0,133, 0x92,63, 0,138, 0x82, 0,5, 0x92,51,
 0,138, 0x90,77, 0x91,75, 0x92,56, 0,133, 0x82, 0,5, 0x92,63, 0,138, 0x90,76, 0x91,70, 0x92,63, 1,21, 0x90,74,
 0x91,70, 0x92,58, 0,138, 0x90,75, 0x92,60, 0,138, 0x90,63, 0x81, 0x82, 0,138, 0x91,74, 0x92,70, 0x90,51, 0,138,
 0x90,75, 0x91,58, 0,138, 0x90,63, 0x81, 0x82, 0,138, 0x91,74, 0x92,70, 0x90,63, 0,138, 0x91,75, 0,138, 0x90,58,
 0x81, 0x82, 0,138, 0x91,61, 0x92,58, 0x90,60, 0,138, 0x90,63, 0x91,63, 0,138, 0x90,61, 0x91,51, 0x82, 0,138, 0x90,58,
 0x91,63, 0x92,58, 0,133, 0x92,63, 0,144, 0x90,67, 0x91,63, 0x92,63, 1,15, 0x92,56, 0,5, 0x80, 0x81, 0,138,
 0x90,59, 0x82, 0,138, 0x91,80, 0x92,75, 0x90,63, 0,138, 0x90,51, 0,138, 0x90,56, 0,133, 0x90,63, 0,144, 0x90,79,
 0x91,75, 0x92,63, 1,21, 0x90,78, 0x91,75, 0x92,56, 0,133, 0x92,59, 0,138, 0x82, 0,5, 0x92,63, 0,133, 0x82,
 0,5, 0x92,51, 0,138, 0x90,77, 0x91,75, 0x92,56, 0,138, 0x92,63, 0,138, 0x90,76, 0x91,70, 0x92,63, 1,21,
 0x90,74, 0x91,70, 0x92,58, 0,138, 0x90,75, 0x92,60, 0,138, 0x90,63, 0x81, 0x82, 0,138, 0x91,74, 0x92,70, 0x90,51,
 0,138, 0x90,75, 0x91,58, 0,138, 0x90,63, 0x81, 0x82, 0,138, 0x91,74, 0x92,70, 0x90,63, 0,138, 0x91,75, 0,133,
 0x80, 0,5, 0x90,58, 0x81, 0x82, 0,138, 0x91,61, 0x92,58, 0x90,60, 0,138, 0x90,63, 0x91,63, 0,138, 0x90,61, 0x91,51,
 0x82, 0,138, 0x90,58, 0x91,63, 0x92,58, 0,133, 0x92,63, 0,144, 0x90,70, 0x91,63, 0x92,63, 1,21, 0x90,79, 0x91,59,
 0x92,56, 0,69, 0x91,59, 0,69, 0x90,59, 0x91,80, 0x92,59, 0,69, 0x92,59, 0,69, 0x90,63, 0x91,59, 0x82, 0,69,
 0x91,59, 0,69, 0x90,79, 0x91,51, 0x92,59, 0,69, 0x92,59, 0,69, 0x90,56, 0x91,80, 0x92,59, 0,69, 0x92,59,
 0,69, 0x90,59, 0x91,59, 0x82, 0,69, 0x91,59, 0,69, 0x90,71, 0x91,63, 0x92,59, 0,69, 0x92,59, 0,69, 0x91,51,
 0x92,59, 0,69, 0x92,59, 0,69, 0x90,56, 0x91,79, 0x92,59, 0,69, 0x92,59, 0,69, 0x90,60, 0x91,80, 0x92,59,
 0,69, 0x92,59, 0,69, 0x90,64, 0x91,59, 0x82, 0,69, 0x91,59, 0,69, 0x90,79, 0x91,48, 0x92,59, 0,69, 0x92,59,
 0,69, 0x90,56, 0x91,80, 0x92,59, 0,69, 0x92,59, 0,69, 0x90,60, 0x91,59, 0x82, 0,69, 0x91,59, 0,69, 0x90,71,
 0x91,64, 0x92,59, 0,69, 0x92,59, 0,69, 0x91,48, 0x92,59, 0,69, 0x92,59, 0,69, 0x90,56, 0x91,79, 0x92,60,
 0,69, 0x92,60, 0,69, 0x90,64, 0x91,80, 0x92,60, 0,69, 0x92,60, 0,69, 0x90,68, 0x91,60, 0x82, 0,69, 0x91,60,
 0,69, 0x90,79, 0x91,48, 0x92,60, 0,69, 0x92,60, 0,69, 0x90,56, 0x91,80, 0x92,60, 0,69, 0x92,60, 0,69,
 0x90,64, 0x91,60, 0x82, 0,69, 0x91,60, 0,69, 0x90,72, 0x91,68, 0x92,60, 0,69, 0x92,60, 0,69, 0x91,48, 0x92,60,
 0,69, 0x92,60, 0,69, 0x90,56, 0x91,79, 0x92,61, 0,69, 0x92,61, 0,69, 0x90,64, 0x91,80, 0x92,61, 0,69,
 0x92,61, 0,69, 0x90,68, 0x91,61, 0x82, 0,69, 0x91,61, 0,69, 0x90,79, 0x91,49, 0x92,61, 0,69, 0x92,61, 0,69,
 0x90,56, 0x91,80, 0x92,61, 0,69, 0x92,61, 0,69, 0x90,64, 0x91,61, 0x82, 0,69, 0x91,61, 0,69, 0x90,74, 0x91,68,
 0x92,61, 0,69, 0x92,61, 0,69, 0x91,49, 0x92,61, 0,69, 0x92,61, 0,69, 0x90,63, 0x91,75, 0x92,67, 0,138,
 0x90,63, 0x91,75, 0x92,67, 0,138, 0x90,63, 0x91,75, 0x92,67, 1,21, 0x90,55, 0x81, 0x82, 1,21, 0x91,79, 0x92,63,
 0x90,51, 1,21, 0x90,75, 0x91,67, 0x92,63, 0,138, 0x90,75, 0x91,67, 0x92,63, 0,138, 0x90,75, 0x91,67, 0x92,63,
 1,21, 0x90,56, 0x81, 0x82, 1,21, 0x91,80, 0x92,63, 0x90,51, 1,21, 0x90,75, 0x91,70, 0x92,63, 0,138, 0x90,75,
 0x91,70, 0x92,63, 0,138, 0x90,75, 0x91,70, 0x92,63, 1,15, 0x82, 0,5, 0x80, 0x81, 1,21, 0x90,63, 0x91,74, 0x92,68,
 0,133, 0x80, 0,5, 0x90,63, 0,138, 0x90,75, 0x91,67, 0x92,56, 0,138, 0x90,63, 0x91,60, 0x92,63, 0,138, 0x90,64,
 0x91,59, 0x92,64, 0,138, 0x90,65, 0x91,59, 0x92,65, 0,138, 0x90,66, 0x91,58, 0x92,66, 0,138, 0x90,67, 0x91,57,
 0x92,67, 0,138, 0x90,68, 0x91,56, 0x92,68, 0,138, 0x90,70, 0x91,55, 0x92,70, 0,138, 0x90,68, 0x91,63, 0x92,56,
 0,138, 0x82, 0,133, 0x92,63, 0,144, 0x92,63, 0,138, 0x82, 0,133, 0x92,56, 0,138, 0x82, 0,5, 0x92,59, 0,138,
 0x92,63, 0,138, 0x90,56, 0x81, 0x82, 0,133, 0x80, 0,144, 0x90,74, 0x91,68, 0x92,63, 0,138, 0x90,75, 0x92,63, 0,133,
 0x82, 0,5, 0x80, 0x81, 0,138, 0x90,56, 0x91,74, 0x92,68, 0,138, 0x90,62, 0x91,75, 0,133, 0x90,63, 0,5, 0x81,
 0x82, 0,138, 0x90,67, 0x91,63, 0x92,55, 0,133, 0x82, 0,144, 0x92,63, 0,138, 0x92,63, 0,133, 0x82, 0,138, 0x92,55,
 0,144, 0x92,63, 0,138, 0x92,63, 0,133, 0x92,55, 0,5, 0x80, 0x81, 0,138, 0x82, 0,138, 0x90,74, 0x91,70, 0x92,63,
 0,138, 0x90,75, 0x92,63, 0,138, 0x80, 0x81, 0x82, 0,138, 0x90,74, 0x91,70, 0x92,55, 0,138, 0x90,75, 0x92,62, 0,138,
 0x90,63, 0x81, 0x82, 0,138, 0x91,71, 0x92,64, 0x90,52, 0,133, 0x80, 0,144, 0x90,59, 0,138, 0x90,59, 0,133, 0x80,
 0,144, 0x90,52, 0,133, 0x80, 0,5, 0x90,56, 0,133, 0x90,59, 0,144, 0x90,52, 0x81, 0x82, 0,133, 0x80, 0,144,
 0x90,76, 0x91,71, 0x92,59, 0,138, 0x90,78, 0x92,59, 0,133, 0x82, 0,5, 0x80, 0x81, 0,138, 0x90,52, 0x91,76, 0x92,71,
 0,138, 0x90,56, 0x91,78, 0,133, 0x90,59, 0,5, 0x81, 0x82, 0,138, 0x90,75, 0x91,70, 0x92,55, 0,138, 0x82, 0,133,
 0x92,63, 0,144, 0x90,63, 0x91,58, 0x92,63, 0,133, 0x82, 0,138, 0x92,55, 0,144, 0x90,75, 0x91,70, 0x92,60, 0,138,
 0x92,63, 0,133, 0x82, 0,5, 0x80, 0x81, 0,138, 0x90,63, 0x91,72, 0x92,70, 0,138, 0x90,62, 0x91,72, 0x92,70, 0,138,
 0x90,60, 0x91,72, 0x92,70, 0,138, 0x90,59, 0x91,70, 0x92,67, 0,138, 0x90,59, 0x91,70, 0x92,67, 0,138, 0x90,58,
 0x91,67, 0x92,60, 0,138, 0x90,55, 0x91,67, 0x92,60, 0,138, 0x80, 0x81, 0x82,
 0xf0
};
// This score contains 2588 bytes, and 3 tone generators are used.

const byte title[] PROGMEM = {
// Rodland
 0x90,75, 0,120, 0x91,56, 0x92,44, 0x90,80, 0,240, 0x90,80, 0,120, 0x91,72, 0x90,72, 0x93,63, 0x94,68,
 0,240, 0x90,72, 0,120, 0x91,72, 0x90,75, 0x93,68, 0x94,63, 0,240, 0x90,75, 0,120, 0x91,56, 0x92,44, 0x90,68,
 0x83, 0x84, 0,240, 0x90,68, 0,120, 0x91,68, 0x90,72, 0x93,72, 0x94,63, 0,240, 0x90,72, 0,120, 0x91,68, 0x90,63,
 0x93,63, 0x94,72, 0,240, 0x90,63, 0,120, 0x91,51, 0x92,39, 0x90,69, 0x83, 0x84, 0,240, 0x90,69, 0,120, 0x91,67,
 0x90,70, 0x93,73, 0x94,63, 0,240, 0x90,70, 0,120, 0x91,67, 0x90,72, 0x93,63, 0x94,73, 0,240, 0x90,73, 0,120,
 0x91,51, 0x92,39, 0x90,75, 0x83, 0x84, 0,240, 0x93,89, 0x90,77, 0,120, 0x91,67, 0x93,87, 0x90,75, 0x94,73, 0x95,63,
 1,105, 0x91,73, 0x94,67, 0x95,63, 1,105, 0x92,44, 0x90,80, 0x91,56, 0x83, 0x84, 0x85, 0,240, 0x90,80, 0,120, 0x91,68,
 0x90,72, 0x94,72, 0x95,63, 0,240, 0x90,72, 0,120, 0x91,68, 0x90,75, 0x94,72, 0x95,63, 0,240, 0x90,75, 0,120,
 0x91,56, 0x92,44, 0x90,68, 0x84, 0x85, 0,240, 0x90,68, 0,120, 0x91,68, 0x90,72, 0x94,72, 0x95,63, 0,240, 0x90,72,
 0,120, 0x91,72, 0x90,63, 0x94,68, 0x95,63, 0,240, 0x90,63, 0,120, 0x91,51, 0x92,39, 0x90,70, 0x84, 0x85, 0,240,
 0x90,72, 0,120, 0x91,73, 0x90,73, 0x94,67, 0x95,63, 0,240, 0x90,75, 0,120, 0x91,63, 0x90,77, 0x94,73, 0x95,67,
 0,240, 0x90,79, 0,120, 0x91,56, 0x92,44, 0x90,80, 0x84, 0x85, 0,240, 0x93,94, 0x90,82, 0,120, 0x91,72, 0x93,92,
 0x90,80, 0x94,63, 0x95,68, 2,90, 0x93,91, 0x80, 0,120, 0x92,41, 0x91,53, 0x93,92, 0x84, 0x85, 1,105, 0x91,72, 0x94,68,
 0,240, 0x93,91, 0,120, 0x91,68, 0x93,92, 0x94,72, 0,240, 0x93,94, 0,120, 0x92,40, 0x91,52, 0x93,92, 0x84, 1,105,
 0x91,72, 0x94,68, 0,240, 0x93,91, 0,120, 0x91,72, 0x93,89, 0x94,68, 0,240, 0x93,87, 0,120, 0x92,37, 0x91,49,
 0x93,89, 0x84, 1,105, 0x91,70, 0x94,65, 0x95,61, 0,240, 0x93,82, 0,120, 0x91,65, 0x93,82, 0x94,61, 0x95,70, 0,240,
 0x93,89, 0,120, 0x92,36, 0x91,48, 0x93,87, 0x84, 0x85, 1,105, 0x91,63, 0x94,68, 0x95,60, 1,105, 0x91,60, 0x94,68,
 0x95,63, 1,105, 0x93,87, 0x92,41, 0x91,53, 0x84, 0x85, 1,105, 0x91,68, 0x94,72, 0,240, 0x93,84, 0,120, 0x91,72,
 0x93,82, 0x94,68, 0,240, 0x93,80, 0,120, 0x92,40, 0x91,52, 0x93,87, 0x84, 1,105, 0x91,72, 0x94,68, 0,240, 0x93,84,
 0,120, 0x91,72, 0x93,82, 0x94,68, 0,240, 0x93,80, 0,120, 0x92,37, 0x91,49, 0x93,87, 0x84, 1,105, 0x91,65, 0x94,61,
 0x95,70, 0,240, 0x93,85, 0,120, 0x91,70, 0x93,77, 0x94,61, 0x95,65, 0,240, 0x93,82, 0,120, 0x92,39, 0x91,51,
 0x93,80, 0x84, 0x85, 1,105, 0x91,70, 0x93,79, 0x94,63, 0x95,67, 1,105, 0x93,77, 0x91,70, 0x94,63, 0x95,67, 0,180,
 0x93,75, 0,180, 0x90,84, 0x92,44, 0x91,56, 0x83, 0x84, 0x85, 1,105, 0x91,72, 0x94,63, 0x95,68, 1,105, 0x91,63, 0x94,72,
 0x95,68, 1,105, 0x92,39, 0x90,85, 0x91,51, 0x84, 0x85, 1,105, 0x91,73, 0x94,63, 0x95,67, 1,105, 0x90,77, 0x91,67,
 0x94,63, 0x95,73, 1,105, 0x92,37, 0x90,77, 0x91,49, 0x84, 0x85, 1,105, 0x91,67, 0x94,63, 0x95,70, 0,180, 0x90,79,
 0,180, 0x91,63, 0x92,39, 0x90,80, 0x94,70, 0x95,67, 0,180, 0x90,82, 0,180, 0x91,56, 0x92,44, 0x90,80, 0x84, 0x85,
 0,240, 0x90,89, 0,120, 0x91,63, 0x90,87, 0x94,72, 0x95,68, 0,240, 0x90,85, 0,120, 0x91,68, 0x90,84, 0x94,72,
 0x95,63, 0,240, 0x90,82, 0,120, 0x91,56, 0x92,44, 0x90,84, 0x84, 0x85, 1,105, 0x91,63, 0x94,68, 0x95,72, 0,180,
 0x90,83, 0,180, 0x91,68, 0x90,84, 0x94,63, 0x95,72, 0,180, 0x90,85, 0,180, 0x91,51, 0x92,39, 0x90,87, 0x84, 0x85,
 0,180, 0x90,85, 0,180, 0x91,67, 0x90,77, 0x94,63, 0x95,73, 0,180, 0x90,79, 0,180, 0x91,63, 0x90,80, 0x94,67,
 0x95,73, 0,180, 0x90,82, 0,180, 0x91,49, 0x92,37, 0x90,77, 0x84, 0x85, 0,180, 0x90,85, 0,180, 0x91,70, 0x90,84,
 0x94,63, 0x95,67, 0,180, 0x90,82, 0,180, 0x91,63, 0x92,34, 0x90,77, 0x94,67, 0x95,70, 0,180, 0x90,79, 0,180,
 0x91,56, 0x92,32, 0x90,80, 0x84, 0x85, 1,105, 0x91,72, 0x94,68, 0x95,63, 2,150, 0x80, 0,60, 0x81, 0x82, 0x84, 0x85,
 0xf0
};
// This score contains 865 bytes, and 6 tone generators are used.

const byte difficulty[] PROGMEM = {
 0x80, 0x81, 0,151, 0x90,48, 0,176, 0x80, 0,10, 0x90,52, 0,176, 0x80, 0,10, 0x90,55,
 0,176, 0x80, 0,10, 0x90,59, 0,176, 0x80, 0,10, 0x90,60, 0,176, 0x80, 0,10, 0x90,59, 0,176, 0x80, 0,10,
 0x90,55, 0,176, 0x80, 0,10, 0x90,52, 0,176, 0x80, 0,10, 0x90,48, 0,176, 0x80, 0,10, 0x90,52, 0,176, 0x80,
 0,10, 0x90,55, 0,176, 0x80, 0,10, 0x90,59, 0,176, 0x80, 0,10, 0x90,60, 0,176, 0x80, 0,10, 0x90,59, 0,176,
 0x80, 0,10, 0x90,55, 0,176, 0x80, 0,10, 0x90,52, 0,176, 0x80, 0,10, 0x90,48, 0,176, 0x80, 0,10, 0x90,52,
 0,176, 0x80, 0,10, 0x90,55, 0,176, 0x80, 0,10, 0x90,59, 0,176, 0x80, 0,10, 0x90,60, 0,176, 0x80, 0,10,
 0x90,59, 0,176, 0x80, 0,10, 0x90,55, 0,176, 0x80, 0,10, 0x90,52, 0,176, 0x80, 0,10, 0x90,48, 0,176, 0x80,
 0,10, 0x90,52, 0,176, 0x80, 0,10, 0x90,55, 0,176, 0x80, 0,10, 0x90,59, 0,176, 0x80, 0,10, 0x90,60, 0,176,
 0x80, 0,10, 0x90,59, 0,176, 0x80, 0,10, 0x90,55, 0,176, 0x80, 0,10, 0x90,52, 0,176, 0x80, 0,10, 0x90,28,
 0x91,48, 0x92,40, 0,176, 0x81, 0,10, 0x91,52, 0,176, 0x81, 0,10, 0x91,55, 0,176, 0x81, 0,10, 0x91,59, 0,176,
 0x81, 0,10, 0x91,60, 0,176, 0x81, 0,10, 0x91,59, 0,176, 0x81, 0,10, 0x91,55, 0,176, 0x81, 0,10, 0x91,52,
 0,176, 0x81, 0,10, 0x91,48, 0,176, 0x81, 0,10, 0x91,52, 0,176, 0x81, 0,10, 0x91,55, 0,176, 0x81, 0,10,
 0x91,59, 0,176, 0x81, 0,10, 0x91,60, 0,176, 0x81, 0,10, 0x91,59, 0,176, 0x81, 0,10, 0x91,55, 0,176, 0x81,
 0,10, 0x91,52, 0,35, 0x80, 0x82, 0,140, 0x81, 0,10, 0x90,48, 0,176, 0x80, 0,10, 0x90,52, 0,176, 0x80, 0,10,
 0x90,55, 0,176, 0x80, 0,10, 0x90,59, 0,176, 0x80, 0,10, 0x90,60, 0,176, 0x80, 0,10, 0x90,59, 0,176, 0x80,
 0,10, 0x90,55, 0,176, 0x80, 0,10, 0x90,52, 0,176, 0x80, 0,10, 0x90,48, 0,176, 0x80, 0,10, 0x90,52, 0,176,
 0x80, 0,10, 0x90,55, 0,176, 0x80, 0,10, 0x90,59, 0,176, 0x80, 0,10, 0x90,60, 0,176, 0x80, 0,10, 0x90,59,
 0,176, 0x80, 0,10, 0x90,55, 0,176, 0x80, 0,10, 0x90,52, 0,176, 0x80, 0,10, 0x90,40, 0x91,48, 0x92,47, 0,176,
 0x81, 0,10, 0x91,52, 0,176, 0x81, 0,10, 0x91,55, 0,176, 0x81, 0,10, 0x91,59, 0,176, 0x81, 0,10, 0x91,67,
 0x93,60, 0,176, 0x83, 0,10, 0x93,59, 0,176, 0x83, 0,10, 0x93,55, 0,176, 0x83, 0,10, 0x93,52, 0,176, 0x83,
 0,10, 0x93,48, 0,176, 0x83, 0,10, 0x93,52, 0,176, 0x83, 0,10, 0x93,55, 0,176, 0x83, 0,10, 0x93,59, 0,176,
 0x83, 0,10, 0x93,60, 0,176, 0x83, 0,10, 0x93,59, 0,176, 0x83, 0,10, 0x93,55, 0,176, 0x83, 0,10, 0x93,52,
 0,35, 0x80, 0x82, 0,37, 0x81, 0,103, 0x83, 0,10, 0x90,48, 0,176, 0x80, 0,10, 0x90,52, 0,176, 0x80, 0,10,
 0x90,55, 0,176, 0x80, 0,10, 0x90,59, 0,176, 0x80, 0,10, 0x90,60, 0,176, 0x80, 0,10, 0x90,59, 0,176, 0x80,
 0,10, 0x90,55, 0,176, 0x80, 0,10, 0x90,52, 0,176, 0x80, 0,10, 0x90,48, 0,176, 0x80, 0,10, 0x90,52, 0,176,
 0x80, 0,10, 0x90,55, 0,176, 0x80, 0,10, 0x90,59, 0,176, 0x80, 0,10, 0x90,38, 0x91,60, 0,176, 0x81, 0,10,
 0x91,59, 0,176, 0x81, 0,10, 0x91,55, 0,176, 0x81, 0,10, 0x91,52, 0,148, 0x80, 0,28, 0x81, 0,10, 0x90,28,
 0x91,48, 0x92,40, 0,176, 0x81, 0,10, 0x91,52, 0,176, 0x81, 0,10, 0x91,55, 0,176, 0x81, 0,10, 0x91,59, 0,176,
 0x81, 0,10, 0x91,60, 0,176, 0x81, 0,10, 0x91,59, 0,176, 0x81, 0,10, 0x91,55, 0,176, 0x81, 0,10, 0x91,52,
 0,176, 0x81, 0,10, 0x91,48, 0,176, 0x81, 0,10, 0x91,52, 0,176, 0x81, 0,10, 0x91,55, 0,176, 0x81, 0,10,
 0x91,59, 0,176, 0x81, 0,10, 0x91,60, 0,176, 0x81, 0,10, 0x91,59, 0,176, 0x81, 0,10, 0x91,55, 0,176, 0x81,
 0,10, 0x91,52, 0,35, 0x80, 0x82, 0,140, 0x81, 0,10, 0x90,48, 0,176, 0x80, 0,10, 0x90,52, 0,176, 0x80, 0,10,
 0x90,55, 0,176, 0x80, 0,10, 0x90,59, 0,176, 0x80, 0,10, 0x90,60, 0,176, 0x80, 0,10, 0x90,59, 0,176, 0x80,
 0,10, 0x90,55, 0,176, 0x80, 0,10, 0x90,52, 0,176, 0x80, 0,10, 0x90,48, 0,176, 0x80, 0,10, 0x90,52, 0,176,
 0x80, 0,10, 0x90,55, 0,176, 0x80, 0,10, 0x90,59, 0,176, 0x80, 0,10, 0x90,38, 0x91,60, 0,176, 0x81, 0,10,
 0x91,59, 0,176, 0x81, 0,10, 0x91,55, 0,176, 0x81, 0,10, 0x91,52, 0,148, 0x80, 0,28, 0x81, 0,10, 0x90,28,
 0x91,48, 0x92,31, 0x93,40, 0,176, 0x81, 0,10, 0x91,52, 0,176, 0x81, 0,10, 0x91,55, 0,176, 0x81, 0,10, 0x91,59,
 0,176, 0x81, 0,10, 0x91,60, 0,176, 0x81, 0,10, 0x91,59, 0,176, 0x81, 0,10, 0x91,55, 0,176, 0x81, 0,10,
 0x91,52, 0,176, 0x81, 0,10, 0x91,48, 0,176, 0x81, 0,10, 0x91,52, 0,176, 0x81, 0,10, 0x91,55, 0,176, 0x81,
 0,10, 0x91,59, 0,176, 0x81, 0,10, 0x91,60, 0,176, 0x81, 0,10, 0x91,59, 0,176, 0x81, 0,10, 0x91,55, 0,176,
 0x81, 0,10, 0x91,52, 0,35, 0x80, 0x82, 0x83, 0,140, 0x81, 0,10, 0x90,48, 0,176, 0x80, 0,10, 0x90,52, 0,176,
 0x80, 0,10, 0x90,55, 0,176, 0x80, 0,10, 0x90,59, 0,176, 0x80, 0,10, 0x90,60, 0,176, 0x80, 0,10, 0x90,59,
 0,176, 0x80, 0,10, 0x90,55, 0,176, 0x80, 0,10, 0x90,52, 0,176, 0x80, 0,10, 0x90,38, 0x91,48, 0,176, 0x81,
 0,10, 0x91,52, 0,176, 0x81, 0,10, 0x91,55, 0,157, 0x80, 0,18, 0x81, 0,10, 0x90,35, 0x91,59, 0,176, 0x81,
 0,10, 0x91,60, 0,167, 0x80, 0,9, 0x81, 0,10, 0x90,59, 0,176, 0x80, 0,10, 0x90,35, 0x91,55, 0,176, 0x81,
 0,10, 0x91,52, 0,176, 0x81, 0,10, 0x91,48, 0,176, 0x81, 0,10, 0x91,52, 0,176, 0x81, 0,10, 0x91,55, 0,176,
 0x81, 0,10, 0x91,59, 0,176, 0x81, 0,10, 0x91,60, 0,176, 0x81, 0,10, 0x91,59, 0,176, 0x81, 0,10, 0x91,55,
 0,176, 0x81, 0,10, 0x91,52, 0,176, 0x81, 0,10, 0x91,48, 0,176, 0x81, 0,10, 0x91,52, 0,176, 0x81, 0,10,
 0x91,55, 0,176, 0x81, 0,10, 0x91,59, 0,176, 0x81, 0,10, 0x91,60, 0,176, 0x81, 0,10, 0x91,59, 0,176, 0x81,
 0,10, 0x91,55, 0,176, 0x81, 0,10, 0x91,52, 0,17, 0x80, 0,159, 0x81, 0,10, 0x90,48, 0,176, 0x80, 0,10,
 0x90,52, 0,176, 0x80, 0,10, 0x90,55, 0,176, 0x80, 0,10, 0x90,59, 0,176, 0x80, 0,10, 0x90,60, 0,176, 0x80,
 0,10, 0x90,59, 0,176, 0x80, 0,10, 0x90,55, 0,176, 0x80, 0,10, 0x90,52, 0,176, 0x80, 0,10, 0x90,48, 0,176,
 0x80, 0,10, 0x90,52, 0,176, 0x80, 0,10, 0x90,55, 0,176, 0x80, 0,10, 0x90,59, 0,176, 0x80, 0,10, 0x90,60,
 0,176, 0x80, 0,10, 0x90,59, 0,176, 0x80, 0,10, 0x90,55, 0,176, 0x80, 0,10, 0x90,52, 0,176, 0x80, 0,10,
 0x90,64, 0x91,48, 0x92,67, 0x93,76, 0,176, 0x81, 0,10, 0x91,52, 0,176, 0x81, 0,10, 0x91,55, 0,176, 0x81, 0,10,
 0x91,59, 0,176, 0x81, 0,10, 0x91,60, 0,176, 0x81, 0,10, 0x91,59, 0,176, 0x81, 0,10, 0x91,55, 0,176, 0x81,
 0,10, 0x91,52, 0,176, 0x81, 0,10, 0x91,48, 0,176, 0x81, 0,10, 0x91,52, 0,176, 0x81, 0,10, 0x91,55, 0,176,
 0x81, 0,10, 0x91,59, 0,176, 0x81, 0,10, 0x91,60, 0,176, 0x81, 0,10, 0x91,59, 0,176, 0x81, 0,10, 0x91,55,
 0,176, 0x81, 0,10, 0x91,52, 0,35, 0x80, 0x82, 0x83, 0,140, 0x81, 0,10, 0x90,64, 0x91,48, 0x92,67, 0,176, 0x81,
 0,10, 0x91,52, 0,176, 0x81, 0,10, 0x91,55, 0,176, 0x81, 0,10, 0x91,59, 0,148, 0x80, 0x82, 0,28, 0x81, 0,10,
 0x90,67, 0x91,60, 0x92,71, 0x93,76, 0,176, 0x81, 0,10, 0x91,59, 0,176, 0x81, 0,10, 0x91,55, 0,176, 0x81, 0,10,
 0x91,52, 0,176, 0x81, 0,10, 0x91,48, 0,176, 0x81, 0,10, 0x91,52, 0,176, 0x81, 0,10, 0x91,55, 0,176, 0x81,
 0,10, 0x91,59, 0,176, 0x81, 0,10, 0x91,60, 0,176, 0x81, 0,10, 0x91,59, 0,176, 0x81, 0,10, 0x91,55, 0,176,
 0x81, 0,10, 0x91,52, 0,176, 0x81, 0,10, 0x91,48, 0,176, 0x81, 0,10, 0x91,52, 0,176, 0x81, 0,10, 0x91,55,
 0,176, 0x81, 0,10, 0x91,59, 0,176, 0x81, 0,10, 0x91,60, 0,176, 0x81, 0,10, 0x91,59, 0,176, 0x81, 0,10,
 0x91,55, 0,176, 0x81, 0,9, 0x80, 0x82, 0x83, 0,1, 0x90,52, 0,176, 0x80, 0,10, 0x90,74, 0x91,48, 0,176, 0x81,
 0,10, 0x91,52, 0,176, 0x81, 0,10, 0x91,55, 0,176, 0x81, 0,10, 0x91,59, 0,148, 0x80, 0,28, 0x81, 0,10,
 0x90,71, 0x91,60, 0,176, 0x81, 0,10, 0x91,59, 0,176, 0x81, 0,10, 0x91,55, 0,176, 0x81, 0,10, 0x91,52, 0,176,
 0x81, 0,10, 0x91,28, 0x92,40, 10,250, 0x80, 0,37, 0x81, 0x82, 0,151, 0x90,40, 0,176, 0x80, 0,10, 0x90,43, 0,176,
 0x80, 0,10, 0x90,47, 0,176, 0x80, 0,10, 0x90,48, 0,176, 0x80, 0,10, 0x90,47, 0,176, 0x80, 0,10, 0x90,43,
 0,176, 0x80, 0,10, 0x90,40, 6,243, 0x80,
 0xf0
};
// This score contains 1853 bytes, and 4 tone generators are used.

const unsigned char lose[] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0xa0, 0x50, 0xb8, 0x58, 0x28, 0x14, 0x4, 0x4, 0x4, 0x4, 0x84, 0x48, 0x98, 0x30, 0x60, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xc0, 0x40, 0x60, 0x20, 0x20, 0x10, 0x10, 0x10, 0x90, 0x90, 0x50, 0x50, 0x50, 0x50, 0x30, 0x30, 0x30, 0x20, 0x20, 0x20, 0x20, 0x20, 0x60, 0x40, 0x40, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xd5, 0xaa, 0x55, 0xaa, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x80, 0x00, 0xc0, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0xa0, 0x50, 0x28, 0x14, 0x2, 0x3, 0x1, 0x00, 0x80, 0xc0, 0x30, 0x18, 0xc, 0x2, 0x3, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x3, 0x6, 0x1c, 0xf0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x3, 0x3, 0x6, 0x5, 0xa, 0xd, 0xa, 0xd, 0xa, 0xd, 0xa, 0x5, 0x6, 0x3, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xb8, 0x5e, 0x2b, 0x5, 0x2, 0x1, 0x00, 0x00, 0x00, 0x80, 0x70, 0xe, 0x3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7, 0x3c, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x7c, 0xaf, 0x55, 0xaa, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x42, 0x42, 0xc2, 0x42, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2, 0xfe, 0x2, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x42, 0x42, 0x42, 0x42, 0x3c, 0x00, 0x00, 0x00, 0x3, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x55, 0xaa, 0x55, 0xaa, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x7, 0x00, 0x00, 0x00, 0x1, 0x6, 0x00, 0x00, 0x4, 0x00, 0x00, 0x4, 0x7, 0x4, 0x00, 0x00, 0x4, 0x00, 0x00, 0x7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0xe0, 0x60, 0xc0, 0x88, 0x98, 0x38, 0x78, 0xd0, 0x3f, 0x35, 0x6a, 0xd5, 0xaa, 0x00, 0x00, 0xf0, 0x30, 0x60, 0x80, 0xc0, 0x7f, 0xc0, 0x40, 0xc0, 0x80, 0x00, 0xf, 0xf1, 0x82, 0x4, 0x18, 0x20, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0xe0, 0x20, 0xe0, 0x80, 0x00, 0x00, 0x80, 0x60, 0x18, 0xe, 0x1f, 0xf0, 0x80, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x40, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x60, 0x18, 0x8, 0x18, 0x60, 0x40, 0x40, 0x60, 0xa0, 0xd0, 0x78, 0x38, 0x1c, 0xc, 0x4, 0x00, 0x00, 0x00, 0xf0, 0x70, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x20, 0x60, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xc0, 0x60, 0x18, 0x8c, 0xfc, 0x80, 0x40, 0x00, 0x00, 0x3, 0x7, 0x7, 0x00, 0x00, 0x1, 0x1, 0x2, 0x3, 0x7, 0x4, 0x00, 0x00, 0x1, 0x3, 0x6, 0xd, 0xf, 0x00, 0x00, 0x3, 0x2, 0x7, 0x00, 0x00, 0x1, 0x6, 0xc, 0x8, 0x7, 0x00, 0x00, 0x00, 0x1, 0x7, 0x8, 0x6, 0x1, 0x1, 0x7, 0x8, 0x8, 0xc, 0x4, 0xc, 0x8, 0x8, 0xf, 0x3, 0x4, 0xf, 0x00, 0x00, 0x3, 0x6, 0x6, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3, 0x6, 0x4, 0x4, 0x7, 0x00, 0x00, 0x00, 0x1, 0x3, 0x4, 0x4, 0x6, 0x3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6, 0x7, 0x2, 0x3, 0xf, 0x8, 0x8, 0x8, 0x8, 0x8, 0xe, 0x1, 0x00, 0x3, 0x2, 0x4, 0x4, 0x6, 0x3, 0xe, 0x8, 0xc, 0x3, 0x00, 0x00, 0x00, 0x3, 0x4, 0x4, 0x7, 0x3, 0x2, 0x2, 0x3, 0x1, 0x1, 0x1, 0x00, 0x00, 0x7, 0x3, 0x00, 0x00, 
};
const unsigned char win[] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x30, 0xd0, 0x58, 0x28, 0x28, 0x28, 0x58, 0x50, 0x50, 0xb0, 0x60, 0xc0, 0xf0, 0xb0, 0x50, 0xb0, 0x50, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0xf0, 0xc0, 0x60, 0xb0, 0x50, 0x50, 0x58, 0x28, 0x28, 0x28, 0x58, 0xd0, 0x30, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x87, 0x78, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x2, 0xff, 0xaa, 0x55, 0xaa, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4, 0x6, 0xfd, 0x1, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x15, 0x15, 0x15, 0x8, 0x00, 0x1, 0x1f, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x2, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87, 0x78, 0x87, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3, 0x6, 0xd, 0x1a, 0x34, 0x68, 0xd0, 0xa0, 0xa0, 0x40, 0x40, 0x40, 0x40, 0x40, 0x43, 0x4e, 0xbd, 0xea, 0xd5, 0xa8, 0x50, 0xa0, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x7f, 0x00, 0x7f, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0xe0, 0xb8, 0x4e, 0x43, 0x40, 0x40, 0x40, 0x40, 0x40, 0xa0, 0xa0, 0xd0, 0x68, 0x34, 0x1a, 0xd, 0x6, 0x3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x60, 0xb0, 0x18, 0x8, 0x8, 0x8, 0x8, 0x88, 0x98, 0x10, 0x30, 0x60, 0xc0, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x00, 0x00, 0x1, 0x3, 0x2, 0x7, 0xe, 0xd, 0xa, 0x14, 0x18, 0x14, 0x18, 0x34, 0x29, 0xf1, 0xa1, 0x41, 0x1, 0x1, 0x1, 0xe0, 0x20, 0x30, 0x10, 0x10, 0x10, 0x10, 0x8, 0x8, 0xc, 0x6, 0x2, 0x3, 0x1, 0x00, 0x00, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0xc0, 0x40, 0x40, 0x40, 0x40, 0x40, 0xff, 0xab, 0x55, 0xaa, 0xd0, 0xa0, 0xc0, 0xa0, 0x40, 0x6f, 0x42, 0x61, 0x40, 0x60, 0x21, 0x27, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x60, 0x20, 0x30, 0x1f, 0x1a, 0x75, 0xc0, 0x00, 0xa0, 0x5f, 0x10, 0x10, 0x10, 0x20, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3, 0x3, 0x2, 0x2, 0x2, 0x2, 0x3, 0x71, 0x89, 0x29, 0x2d, 0x87, 0x1, 0x1, 0x00, 0x40, 0x60, 0x80, 0x9e, 0x9f, 0x9b, 0x9e, 0x8c, 0x9f, 0x9b, 0x1e, 0xf, 0x6, 0xc, 0x98, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x40, 0x60, 0x30, 0x30, 0x18, 0x8c, 0x87, 0x80, 0x40, 0x40, 0x40, 0x20, 0xe9, 0xa9, 0x5f, 0x00, 0xd, 0xf2, 0x10, 0x10, 0x8, 0x4, 0x3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x1, 0x82, 0xf4, 0x58, 0x8, 0x88, 0x98, 0x90, 0x93, 0x94, 0x94, 0x94, 0xd2, 0x49, 0x58, 0x5c, 0x34, 0x16, 0x13, 0x19, 0x8c, 0xc4, 0x46, 0x62, 0x23, 0x31, 0x10, 0x18, 0x8, 0xc, 0x4, 0x6, 0x3, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xaa, 0x55, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0xae, 0x5d, 0xba, 0x14, 0x18, 0x14, 0x18, 0x14, 0x18, 0x1c, 0xf, 0xc, 0x4, 0xe4, 0x1e, 0x2, 0x1, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0x30, 0x30, 0x30, 0x38, 0x28, 0x34, 0x2c, 0x37, 0x2a, 0x21, 0x20, 0x20, 0x23, 0x24, 0x24, 0x28, 0x28, 0x30, 0x30, 0x30, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};
const unsigned char logo[] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xa0, 0x50, 0xb8, 0x58, 0x28, 0x4, 0x4, 0x4, 0x4, 0x4, 0x4, 0x4, 0x4, 0xc, 0x8, 0x10, 0x30, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x58, 0xa8, 0x5c, 0x84, 0x6, 0x2, 0x2, 0x1, 0xc1, 0xc1, 0x61, 0x20, 0x20, 0x20, 0xe0, 0xc0, 0x00, 0x00, 0x00, 0x1, 0x3, 0x6, 0xc, 0xf8, 0x8, 0x8, 0x10, 0x10, 0x10, 0x30, 0x7c, 0x77, 0xea, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x6, 0xc, 0x38, 0x60, 0xf0, 0x5f, 0xab, 0x15, 0x1, 0x1, 0x81, 0x71, 0xf, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x60, 0x20, 0x20, 0x60, 0xe0, 0xa0, 0x40, 0x80, 0x00, 0x00, 0x3, 0x3e, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x1f, 0xfa, 0xd5, 0xaa, 0x50, 0x80, 0x00, 0x00, 0x00, 0xf, 0xc, 0x4, 0x4, 0x86, 0x83, 0x80, 0x80, 0xc0, 0xc0, 0x60, 0x30, 0x10, 0xc, 0xe7, 0x60, 0x20, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x3, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xf8, 0x47, 0x80, 0x00, 0x00, 0x00, 0xfc, 0x7, 0x00, 0xc0, 0x40, 0x40, 0x40, 0x40, 0x41, 0x5f, 0x5a, 0x55, 0x5a, 0x54, 0x58, 0xdf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3, 0xe, 0x75, 0xea, 0x54, 0xa0, 0x00, 0x6, 0x1f, 0x71, 0x81, 0x1, 0x00, 0x00, 0x3f, 0x75, 0xea, 0x50, 0xa0, 0x40, 0x80, 0x43, 0x82, 0x42, 0x83, 0x40, 0x80, 0x40, 0x80, 0x60, 0x30, 0xe, 0x1, 0x00, 0x00, 0x80, 0x7f, 0x1d, 0xea, 0x54, 0xa8, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0xf0, 0x7f, 0xea, 0xd5, 0xaa, 0x50, 0xa0, 0x40, 0x8f, 0x10, 0x20, 0x21, 0x27, 0x25, 0x36, 0x1d, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7, 0xfd, 0xaa, 0xd5, 0xa8, 0x50, 0x68, 0x77, 0x3e, 0x30, 0x00, 0x00, 0x00, 0x00, 0x1, 0x2, 0x3, 0x2, 0x3, 0x2, 0x3, 0x2, 0x3, 0x3d, 0x37, 0x2a, 0x35, 0x28, 0x30, 0x28, 0x30, 0x28, 0x3f, 0x00, 0x00, 0x00, 0x7, 0x1e, 0x15, 0x1a, 0x94, 0x9a, 0x9c, 0x8f, 0x80, 0x80, 0x80, 0x81, 0x83, 0x87, 0x86, 0x85, 0x86, 0x85, 0x86, 0x85, 0x6, 0x5, 0x6, 0x6, 0x2, 0x2, 0xf3, 0x5f, 0xaa, 0x15, 0x00, 0x7, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x60, 0xa1, 0x21, 0x90, 0x10, 0x90, 0x10, 0x98, 0x48, 0x88, 0xc8, 0xa8, 0xd4, 0xe4, 0x54, 0x64, 0x54, 0x64, 0x32, 0x2a, 0x35, 0x19, 0x15, 0x19, 0x15, 0x19, 0x15, 0x19, 0x15, 0x19, 0x15, 0x19, 0x15, 0x19, 0x15, 0x19, 0x15, 0x29, 0x31, 0x29, 0x31, 0x28, 0x30, 0x28, 0x30, 0x28, 0x30, 0x28, 0x30, 0x28, 0x30, 0x28, 0x30, 0x28, 0x30, 0x29, 0x51, 0x69, 0x51, 0x63, 0x52, 0xe6, 0xd7, 0xa5, 0xc2, 0xa0, 0xc0, 0xa0, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf, 0xa, 0x5, 0x6, 0x5, 0x2, 0x3, 0x2, 0x1, 0x1, 0x1, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1, 0x1, 0x1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};
int movechance = 15;
int gamestate = 0;
int death = 0;
int justpressed = 0;
int justpressedu = 0;
int justpressedd = 0;
int justpressedb = 0;
int counter = 0;
int ballx = 62;
int bally = 31;
int ballsize = 4;
int ballright = -1;
int balldown = 1;
int paddlewidth = 4;
int paddleheight = 9;
int playerx = 0;
int playery = 0;
int computerx = 127 - paddlewidth;
int computery = 0;
int playerscore = 0;
int computerscore = 0;
void resetgame(){
  ballx = 63;
  bally = 31;
  playerscore = 0;
  computerscore = 0;
}

void setup() {
  arduboy.begin();

  // audio setup
  tunes.initChannel(PIN_SPEAKER_1);
#ifndef AB_DEVKIT
  // if not a DevKit
  tunes.initChannel(PIN_SPEAKER_2);
#else
  // if it's a DevKit
  tunes.initChannel(PIN_SPEAKER_1); // use the same pin for both channels
  tunes.toneMutesScore(true);       // mute the score when a tone is sounding
#endif

  //Seed the random number generator
  arduboy.initRandomSeed();
  //Set the game to 60 frames per second
  arduboy.setFrameRate(60);
  arduboy.clear();
}

void loop() {
  //Prevent the Arduboy from running too fast
  if(!arduboy.nextFrame()) {
    return;
  }
  arduboy.clear();
  //Game code here
  switch( gamestate ) {
    case 0:
      //Title screen
      if(!tunes.playing()){
        tunes.playScore(title);
      }
      arduboy.drawBitmap(-5,-10,logo,128,64,WHITE);
      counter = counter + 1; //Increase counter variable
      if(counter < 45) {
        arduboy.setCursor(4,55);
        arduboy.print("A = PLAY   B = MUSIC"); //If the counter is less than 60, show the text
      }
      if(counter >= 90) {
        counter = 0; //If counter is greater than or less than 120, reset it back to 0
      }
      //Change the gamestate
      
      if(arduboy.pressed(A_BUTTON) and justpressed == 0) {
        tunes.stopScore();
        justpressed = 1;
        gamestate = 1;
      }
      break;
    case 1:
    if(!tunes.playing()){
      tunes.playScore(difficulty);
    }
      //Difficuly set
      if(movechance ==15) {
        arduboy.setCursor(6,27);
        arduboy.print("Difficulty -> EASY");
        arduboy.setCursor(92,35);
        arduboy.print("MEDIUM");
        arduboy.setCursor(92,43);
        arduboy.print("HARD");
      }
      if(movechance == 10) {
        arduboy.setCursor(92,19);
        arduboy.print("EASY");
        arduboy.setCursor(6,27);
        arduboy.print("Difficulty -> MEDIUM");
        arduboy.setCursor(92,35);
        arduboy.print("HARD");
      }
      if(movechance == 5) {
        arduboy.setCursor(92,11);
        arduboy.print("EASY");
        arduboy.setCursor(92,19);
        arduboy.print("MEDIUM");
        arduboy.setCursor(6,27);
        arduboy.print("Difficulty -> HARD");
      }
      if(arduboy.pressed(UP_BUTTON) and justpressedu == 0) {
        justpressedu = 1;
        movechance = movechance + 5;
      }
      if(arduboy.pressed(DOWN_BUTTON)and justpressedd == 0) {
        justpressedd = 1;
        movechance = movechance - 5;
      }
      if( movechance == 20) {
        movechance = 15;
      }
      if (movechance == 0) {
        movechance = 5;
      }
      if (arduboy.pressed(A_BUTTON) and justpressed == 0) {
        gamestate = 2;
        tunes.stopScore();
      }
      break;
    case 2:
      if(!tunes.playing()){
        tunes.playScore(game);
      }
      //Gameplay screen
      if(playerscore ==5) {
        gamestate = 3;
        tunes.stopScore();
      }
      if(computerscore == 5) {
        gamestate = 4;
        tunes.stopScore();
      }
      arduboy.setCursor(20, 0);
      arduboy.print(playerscore);

      arduboy.setCursor(101,0);
      arduboy.print(computerscore);

      if(ballx < -10) {
        ballx = 63;
        bally =31;
        ballright = -1;
        computerscore = computerscore + 1;
      }
      if(ballx > 130) {
        ballx = 63;
        bally = 31;
        ballright = -1;
        playerscore = playerscore +1;
      }
      //Draw the ball
      arduboy.fillRect(ballx, bally, ballsize, ballsize, WHITE);
      //Move the ball right
      if(ballright == 1) {
        ballx = ballx + 1;
      }
      //Move the ball left
      if(ballright == -1) {
        ballx = ballx - 1;
      }
      //Reflect the ball off of the left side of the screen
      if(ballx == playerx + paddlewidth and playery < bally + ballsize and playery + paddleheight > bally) {
        ballright = 1;
      }
      //Reflect the ball off of the right side of the screen
      if(ballx + ballsize == computerx and computery < bally + ballsize and computery + paddleheight > bally) {
        ballright = -1;
      }
      //Move the ball down
      if(balldown == 1) {
        bally = bally + 1;
      }
      //Move the ball up
      if(balldown == -1) {
        bally = bally - 1;
      }
      //Reflect the ball off of the top of the screen
      if(bally == 0) {
        balldown = 1;
      }
      //Reflect the ball off of the bottom of the screen
      if(bally + ballsize == 63) {
        balldown = -1;
      }
      //Draw the player's paddle
      arduboy.fillRect(playerx, playery, paddlewidth, paddleheight, WHITE);
      //If the player presses Up and the paddle is not touching the top of the screen, move the paddle up
      if(arduboy.pressed(UP_BUTTON) and playery > 0) {
        playery = playery - 1;
      }
      //If the player presses down and the paddle is not touching the bottom of the screen, move the paddle down
      if(arduboy.pressed(DOWN_BUTTON) and playery + paddleheight < 63) {
        playery = playery + 1;
      }
      //Draw the computer's paddle
      arduboy.fillRect(computerx, computery, paddlewidth, paddleheight, WHITE);
      //If the ball is close to the edge of the screen or if a random number out of 20 is equal to 1
      if(ballx > 115 or rand() % movechance == 1) {
        //If the ball is higher than the computer's paddle, move the computer's paddle up
        if(bally < computery) {
          computery = computery - 1;
        }
        //If the bottom of the ball is lower than the bottom of the computer's paddle, move the comptuer's paddle down
        if(bally + ballsize > computery + paddleheight) {
          computery = computery + 1;
        }
      }



      //If the ball makes contact with the player's paddle, bounce it back to the right
      if(ballx == playerx + paddlewidth and playery < bally + ballsize and playery + paddleheight > bally) {
        ballright = 1;
      }
      //If the ball makes contact with the computer's paddle, bounce it back to the left
      if(ballx + ballsize == computerx and computery < bally + ballsize and computery + paddleheight > bally) {
        ballright = -1;
      }
      //Change the gamestate
      break;
    case 3:
      //Win screen
      if(!tunes.playing()){
        tunes.playScore(good);
      };
      arduboy.drawBitmap(-5,-3,win,128,64,WHITE);
       counter = counter + 1; //Increase counter variable
      if(counter < 30) {
        arduboy.setCursor(80,40);
        arduboy.print("YOU WIN!"); //If the counter is less than 60, show the text
      }
      if(counter >= 60) {
        counter = 0; //If counter is greater than or less than 120, reset it back to 0
      }
      //Change the gamestate
      if(arduboy.pressed(A_BUTTON) and justpressed == 0) {
        resetgame();
        justpressed = 1;
        gamestate = 0;
        tunes.stopScore();
      }
      break;
    case 4:
      //Game over screen
      if(!tunes.playing()){
        tunes.playScore(dead);
      };
      arduboy.drawBitmap(0,0,lose,128,64,WHITE);
      counter = counter + 1; //Increase counter variable
      if(counter < 30) {
        arduboy.setCursor(70,32);
        arduboy.print("GAME OVER"); //If the counter is less than 60, show the text
      }
      if(counter >= 60) {
        counter = 0; //If counter is greater than or less than 120, reset it back to 0
      }
      //Change the gamestate
      if(arduboy.pressed(A_BUTTON) and justpressed == 0) {
        resetgame();
        death = 0;
        justpressed = 1;
        gamestate = 0;
        tunes.stopScore();
      }
        break;
  }
  //Check if the button is being held down
  if(arduboy.notPressed(A_BUTTON)) {
    justpressed = 0;
  }
    //Check if the button is being held down
  if(arduboy.notPressed(UP_BUTTON)) {
    justpressedu = 0;
  }
    //Check if the button is being held down
  if(arduboy.notPressed(DOWN_BUTTON)) {
    justpressedd = 0;
  }
   //Check if the button is being held down
  if(arduboy.notPressed(B_BUTTON)) {
    justpressedb = 0;
  }
  if(arduboy.pressed(B_BUTTON) and justpressedb == 0 and arduboy.audio.enabled()) {
        arduboy.audio.off();
        justpressedb = 1;
      }
      if(arduboy.pressed(B_BUTTON) and justpressedb == 0 and !arduboy.audio.enabled()) {
        arduboy.audio.on();
        justpressedb = 1;
      }
  arduboy.display();
}
